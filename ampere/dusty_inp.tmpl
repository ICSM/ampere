---------------------------------------------------------------------
  Input data for DUSTY                                               
--------------------------------------------------------------------- 
his is an input file for radiative transfer code DUSTY, version 4.0. 
OTE: this input file is not compatible with old versions of Dusty 
ue to the added new input options. Examples of each input option are 
iven at the end of this file. For a more detailed description please 
efer to the Manual. 


he input file has a free format, text and empty lines can be entered
rbitrarily. All lines that start with the '*' sign are copied to the
utput, and can be used to print out notes and comments. This option 
an also be useful when the program fails for some mysterious reason 
nd you want to compare its output with an exact copy of the input line
s it was read in before processing by DUSTY. The occurrence of relevant 
umerical input, which is entered in standard FORTRAN conventions, is 
lagged by the equal sign `='. The only restrictions are that all required 
nput entries must be specified, and in the correct order; the most likely 
ource of an input error is failure to comply with these requirements. 
ecall, also, that FORTRAN requires a carriage return termination of the 
ile's last line if it contains relevant input. Single entries are always 
receded by the equal sign, `=', and must be padded by blanks on both sides; 
he terminating blank can be optionally preceded with a comma. For example: 
 = 10,000 K as well as Temperature = 1.E4 degrees and simply T = 10000.00 
re all equivalent, legal input entries (note that comma separations of long 
umbers are permitted).  Some input is entered as a list, in which case the 
irst member is preceded by `=' and each subsequent member must be preceded 
y a blank (an optional comma can be entered before the blank for additional 
eparation); for example, Temperatures  = 1E4, 2E4 30,000. Because of the 
pecial role of '=' as a flag for input entry, care must be taken not to 
ntroduce any '=' except when required.  All text following the  '%' sign 
s ignored (as in TeX) and this can be used to comment out material that 
ncludes '=' signs. For example, different options for the same physical 
roperty may require a different number of input entries. By commenting out 
ith '%', all options may be retained in the input file with only the 
elevant one switched on.


----------------------------------------------------------------------
NOTES:                                                                
Sample input file (external.inp)
Spherical dust distribution with
constant density profile
heated by external radiation with a temperature of 5000K
for composite dust grain 70% silicates 30% carbon
for 2 optical depth (10,100)
----------------------------------------------------------------------

 GEOMETRY %(available options: sphere\slab)

   geometry = $geometry

. PHYSICAL PARAMETERS                                                 
   1) Central Source %(available options: on\off)

      	central = $central_source_toggle

   2) External source  %(available options: on\off)
             
		external = $external_source_toggle

   2.1) Shape: %(available options: black_body\engelkd_marengo\power_law\file_lambda_f_lambda\file_f_lambda\file_f_nu)

    	      Spectral shape = $spectral_shape
              Number of BB = 1
              Temperature = 5000 K 

   2.2) Scale: %(available options: flux\Lum_r1\energy_den\dilutn_fac\T1)
      
		Scale = energy_den   % Td at the inner boundary
		flux = 1e4

   3) Dust Properties 
   
   3.1 Chemical composition %(available options: common_grain_composite\common_and_addl_grain\tabulated)

              optical properties index = common_grain_composite
   		Abundances for supported grain types:
             	Sil-Ow  Sil-Oc  Sil-DL  grf-DL  amC-Hn  SiC-Pg 
         x =  0.00    0.70    0.00    0.00    0.30    0.00
	        SIZE DISTRIBUTION = MRN
	        Tsub = 1500.
	   
   4) Density Distribution %(available options: powd\expd\rdw\rdwa\usr_suppld)

       	 density type = POWD
      	 number of powers = 1                
      	 shell's relative thickness = 100.
      	 power = 0.


   5) Optical Depth: %(available options: linear\logarithmic\user_supplied)
 
		 grid type = logarithmic % log grid
      	 lambda0 = 0.55 micron   % fiducial wavelength
		 % minimum optical depth @ fiducial wavelength
      	 tau(min) = 10.0; 
		 % maximum optical depth @ fiducial wavelength
		 tau(max) = 100.0  
      	 number of models = 2

----------------------------------------------------------------------
                                                                      
III. NUMERICS                                                           
    
   - accuracy for flux conservation = 0.10

----------------------------------------------------------------------
                                                                      
IV. OUTPUT PARAMETERS                                                 

	The flags governing file production are as follows: 
	If flag.eq.0 the particular file(s) is not produced. If flag.eq.1
	all model results are in corresponding files with extensions 'spp' 
	(sp.properties), 'stb' (spectra), 'itb' (images and visibilities, 
	if chosen), 'rtb' (radial profiles) and 'mtb' (messages).  If 
	flag.eq.2 each model result is in a separate corresponding file, 
	with visibilities contained in fname.i##. If the images flag.eq.3 
	the visibilities will be in separate files fname.v## (the flag for 
	visibilities has to be the same as for images).
	Note that choosing imaging output requires additional input data 
	(please refer to the exmaples below or to the Manual).


      FILE DESCRIPTION                               FLAG        
     ------------------------------------------------------------     
     - detailed spectra for each model;           fname.s### = 2
     - images at specified wavelengths;           fname.i### = 0
     - en.density at specified radii;             fname.j### = 0
     - radial profiles for each model;            fname.r### = 2
     - detailed run-time messages;                fname.m### = 2
     ------------------------------------------------------------- 


The end of the input parameters listing
**********************************************************************
